// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum Category {
  ST
  SC
  OBC
  GEN
}

enum Institute {
  SCHOOL
  COLLEGE
  UNIVERSITY
  OTHER
  NONE
}

model User {
  id         String   @id @default(cuid())
  username   String   @unique
  password   String   @unique
  email      String   @unique
  mobileNo   String   @unique
  name       String
  fatherName String
  motherName String
  dob        DateTime
  address    String
  gender     Gender
  category   Category
  photo      String?
  remarks    String?

  batches  Batch[]
  courses  Course[]
  students Student[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Course {
  id            String    @id @default(cuid())
  code          String    @unique
  name          String
  instituteName String
  duration      String
  fees          Int
  students      Student[]
  user          User      @relation(fields: [userId], references: [id])
  userId        String
}

model Batch {
  id       String    @id @default(cuid())
  code     String    @unique
  name     String
  time     String
  students Student[]
  user     User      @relation(fields: [userId], references: [id])
  userId   String
}

model Student {
  id               String    @id @default(cuid())
  fullName         String
  fatherName       String
  motherName       String
  dob              DateTime
  gender           Gender
  category         Category
  class            String
  institute        Institute
  instituteName    String?
  mobileNo         String
  guardianMobileNo String
  email            String?
  address          String
  course           Course    @relation(fields: [courseId], references: [id])
  courseId         String
  batch            Batch     @relation(fields: [batchId], references: [id])
  batchId          String
  enrolledOn       DateTime
  totalFees        Int
  session          String
  photo            String?
  remarks          String?

  payments  Payment[]
  documents StudentDocument[]

  user   User   @relation(fields: [userId], references: [id])
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum PaymentMode {
  CASH
  UPI
  PHONEPAY
  GOOGLEPAY
}

model Payment {
  id        String      @id @default(cuid())
  student   Student     @relation(fields: [studentId], references: [id], onDelete: Cascade)
  studentId String
  amount    Int
  method    PaymentMode
  date      DateTime
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

enum DocumentType {
  ABCID
  AADHAAR
  SECONDARY
  HIGHERSECONDARY
  GRADUATION
  POSTGRADUATION
  OTHER
}

model StudentDocument {
  id             String       @id @default(cuid())
  student        Student      @relation(fields: [studentId], references: [id], onDelete: Cascade)
  studentId      String
  documentType   DocumentType
  documentName   String?
  institute      Institute
  instituteName  String?
  idNo           String?
  rollNo         String?
  enrollmentNo   String?
  passingSession String?
  obtainedMarks  Int?
  totalMarks     Int?
  documentLink   String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
